[{"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/reportWebVitals.js":"1","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/clientContainer.js":"2","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/App.js":"3","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/navBar.js":"4","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/index.js":"5","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/rootReducer.js":"6","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actions.js":"7","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/client.js":"8","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/projectContainer.js":"9","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/project.js":"10","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actionType.js":"11","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/timesheetContainer.js":"12","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/timesheetForm.js":"13","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/clientForm.js":"14","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/projectForm.js":"15","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/openProjectsContainer.js":"16","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/login.js":"17","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/signup.js":"18","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/user.js":"19","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/chart.js":"20","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/history.js":"21","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/invoiceContainer.js":"22"},{"size":362,"mtime":1607635548728,"results":"23","hashOfConfig":"24"},{"size":2380,"mtime":1609912595260,"results":"25","hashOfConfig":"24"},{"size":1961,"mtime":1609818979104,"results":"26","hashOfConfig":"24"},{"size":1285,"mtime":1609909165342,"results":"27","hashOfConfig":"24"},{"size":872,"mtime":1609908347981,"results":"28","hashOfConfig":"24"},{"size":966,"mtime":1609819245318,"results":"29","hashOfConfig":"24"},{"size":9395,"mtime":1609821901527,"results":"30","hashOfConfig":"24"},{"size":971,"mtime":1609818979105,"results":"31","hashOfConfig":"24"},{"size":5309,"mtime":1609912688260,"results":"32","hashOfConfig":"24"},{"size":1633,"mtime":1609881917504,"results":"33","hashOfConfig":"24"},{"size":392,"mtime":1609819217684,"results":"34","hashOfConfig":"24"},{"size":5545,"mtime":1609877965096,"results":"35","hashOfConfig":"24"},{"size":1770,"mtime":1609818979107,"results":"36","hashOfConfig":"24"},{"size":2061,"mtime":1609818979105,"results":"37","hashOfConfig":"24"},{"size":4964,"mtime":1609882505756,"results":"38","hashOfConfig":"24"},{"size":2299,"mtime":1609956295421,"results":"39","hashOfConfig":"24"},{"size":2260,"mtime":1609945093060,"results":"40","hashOfConfig":"24"},{"size":1980,"mtime":1609818979107,"results":"41","hashOfConfig":"24"},{"size":162,"mtime":1608738713576,"results":"42","hashOfConfig":"24"},{"size":3345,"mtime":1609962232862,"results":"43","hashOfConfig":"24"},{"size":85,"mtime":1609783437203,"results":"44","hashOfConfig":"24"},{"size":4417,"mtime":1609880230983,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xeyhdd",{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/reportWebVitals.js",[],["104","105"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/clientContainer.js",["106","107","108","109","110","111","112","113"],"import React from 'react'\nimport Client from '../Component/client'\nimport {connect} from 'react-redux'\nimport { BrowserRouter as Router, Route , Switch, withRouter} from 'react-router-dom'\nimport Chart from \"../Component/chart\"\nimport { Card } from 'semantic-ui-react'\nimport ProjectContainer from './projectContainer'\nimport { Button, Header, Icon, Modal, Form } from 'semantic-ui-react'\nimport ClientForm from '../Component/clientForm'\nimport Navbar from './navBar'\nimport {scroller  } from \"react-scroll\";\n\n\nclass ClientContainer extends React.Component {\n\n    state = {\n        showProjects: false, \n        client: {},\n        clientForm:false, \n    }\n\n    renderClients = () => {return this.props.clients.map(clientObj=> <Client  client={clientObj} key={clientObj.id} openProjectHandler={this.openProjectHandler}/> ) }\n\n    openProjectHandler = (client) => {\n        this.setState({showProjects: true, client: client})\n        scroller.scrollTo('client-project-div', {\n            duration: 1500,\n            delay: 100,\n            smooth: true,\n            offset: 50\n        })\n    }\n\n    closeClientForm = () => {\n        this.setState({clientForm:false})\n    }\n    openClientForm = () => {\n        this.setState({clientForm:true})\n    }\n    \n\n    render() {\n        \n        return (\n         <>\n            <Navbar/>\n            { this.props.clients === undefined ? <h1> Loading Clients </h1>:\n                 <>\n                 {/* <Chart/>  */}\n                 <br/> \n                 <br/> \n                 <Card.Group itemsPerRow={3}>\n                {this.renderClients()}\n                </Card.Group>\n                <br/>\n                <Modal\n                // as ={Form}\n                closeIcon\n                open={this.state.clientForm}\n                trigger={<Button color=\"blue\">Add New Client</Button>}\n                onClose={this.closeClientForm}\n                onOpen={this.openClientForm}\n                >\n                    <ClientForm closeForm={this.closeClientForm} userId={this.props.userId}/>\n                </Modal>\n                <br/>\n                <br/>\n                 {this.state.showProjects?  <ProjectContainer  client ={this.state.client} projects = {this.state.client.projects}/>:  null}\n                </>\n            }\n         </>\n        )\n             \n    }\n}\n\n\n\nexport default withRouter(ClientContainer)\n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/App.js",["114","115","116"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/navBar.js",["117","118","119"],"import React from 'react'\nimport {NavLink, Link} from 'react-router-dom'\nimport logo from '../Component/logo4.png'\n// import {Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport { Menu, Image, Dropdown, Sticky} from 'semantic-ui-react'\n\nclass NavBar extends React.Component {\n    render() {\n        return (\n            <>     \n            <Sticky>\n\n           <Menu size=\"massive\" >\n           <Menu.Item id=\"img-item\">\n            <img src={logo} width=\"100%\" height=\"100%\"/>\n            </Menu.Item>\n                <Menu.Menu color =\"black\" position='right' vertical>\n                    <Dropdown item text='Menu'>\n                    <Dropdown.Menu>\n                        <Dropdown.Item className =\"dropdown-li\" ><Link to = \"/open_projects\">Home</Link></Dropdown.Item>\n                        <Dropdown.Item className =\"dropdown-li\" ><Link to = \"/clients\"> View My Clients</Link> </Dropdown.Item>\n                        <Dropdown.Item  className =\"dropdown-li\" onClick={()=> localStorage.removeItem(\"token\")}>    <Link to = \"/\"> Logout</Link></Dropdown.Item>\n                    </Dropdown.Menu>\n                    </Dropdown>\n            </Menu.Menu> \n            </Menu>\n         </Sticky>\n    \n    \n          </>\n            \n        )\n    }\n}\n\nexport default NavBar \n",["120","121"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/index.js",["122","123","124","125"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/rootReducer.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actions.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/client.js",["126"],"import React from 'react'\nimport ProjectContainer from '../Container/projectContainer'\nimport { Card } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\n\nclass Client extends React.Component {\n\n\n    state = {\n        showProjects: false \n    }\n\n    showProjectsHandler = () => {\n       this.props.openProjectHandler(this.props.client)\n    }\n\n    render() {\n        // console.log(this.props)\n        return (\n            <>\n            <Card onClick= {this.showProjectsHandler}>\n            <Card.Content>\n                <Card.Header>{this.props.client.name}</Card.Header>\n                <Card.Meta>Email: {this.props.client.email}</Card.Meta>\n                <Card.Description>\n                Address: {this.props.client.address}\n                <br></br>\n                Phone: {this.props.client.phone}\n                </Card.Description>\n            </Card.Content>\n            </Card>\n \n            </>\n        )\n    }\n}\n\nexport default Client \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/projectContainer.js",["127","128","129","130"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/project.js",["131","132","133"],"import React from 'react'\nimport TimesheetContainer from '../Container/timesheetContainer'\nimport Chart from './chart'\nimport Navbar from '../Container/navBar'\nimport { Button, Image, Item, Icon, Header} from 'semantic-ui-react'\nimport { Link} from 'react-router-dom'\n\n\nclass Project extends React.Component {\n\n\n\n    render() {\n    \n        return (\n            <>      \n            <Navbar/>\n            <br/>\n                <div id= \"project-description\">\n                <Header as='h1'>\n                <Icon name='user' size=\"large\" circular=\"true\"/> {this.props.client.name}\n                </Header>\n                <Header as='h3'>Project: {this.props.project.name}\n                    <Header.Subheader>\n                        Payment Terms: {this.props.project.payment_terms} <br/>\n                        Total Hours:   {this.props.project.project_total_hours} <br/>\n                        Total Earned: ${this.props.project.project_total_earned}<br/>\n                        Complete: {this.props.project.complete? \"Yes\":\"No\" } <br/>\n                    </Header.Subheader>\n                </Header>\n                </div>\n           \n                 <TimesheetContainer timesheets = {this.props.project.timesheets} projectId ={this.props.project.id}  clientId ={this.props.client.id} project= {this.props.project}/>\n            <br/> \n            <br/>\n           <Button><Link  to={{\n                pathname: `/invoice`, \n                query:{client: this.props.client, project: this.props.project}\n              }}> Create An Invoice</Link></Button>  \n            </>\n        )\n    }\n}\n\nexport default Project \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actionType.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/timesheetContainer.js",["134","135","136","137","138"],"import React from 'react'\nimport TimesheetForm from '../Component/timesheetForm'\nimport { BrowserRouter as Router, Route , Switch, withRouter} from 'react-router-dom'\nimport { Grid, Icon, Button, Header, Table} from 'semantic-ui-react'\nimport {connect} from 'react-redux'\nimport {deleteTimesheet} from '../Redux/actions'\n\n\nclass TimesheetContainer extends React.Component {\n\n    state = {\n        showTimesheetButton: this.props.project.complete\n    }\n\n\n    componentDidUpdate= (prevProps) => {\n        if (this.props.timesheets !== prevProps.timesheets) {\n            this.renderTimesheets()\n        }\n    }\n\n    state = {\n        showTimesheetForm: false\n    }\n    renderTimesheets = () => {\n        \n        return this.props.timesheets.map(timesheetObj=> {\n            const deleteHandler = () => {\n                {this.props.deleteTimesheet(this.props.project, this.props.clientId,timesheetObj)}\n            }\n                return(\n                <Table.Row>\n                    <Table.Cell>{timesheetObj.date}</Table.Cell>\n                    <Table.Cell>{timesheetObj.hours}</Table.Cell>\n                    <Table.Cell>{timesheetObj.note}</Table.Cell>\n                    <Table.Cell>  <Button className = \"project-delete-btn\" onClick ={deleteHandler}> Delete </Button></Table.Cell>\n                </Table.Row>\n                        \n                )\n            }\n        )}\n\n        renderInvoiceTimesheets = () => {\n            return this.props.timesheets.map(timesheetObj=> {\n\n                const timesheetEarned = () => {\n                   let earned = timesheetObj.hours*this.props.project.hourly_fee\n                   return earned\n                }\n\n                return(\n                    <Table.Row>\n                          <Table.Cell>{this.props.project.name}</Table.Cell>\n                        <Table.Cell>{timesheetObj.date}</Table.Cell>\n                        <Table.Cell>{timesheetObj.note}</Table.Cell>\n                        <Table.Cell>{timesheetObj.hours}</Table.Cell>\n                        <Table.Cell>{this.props.project.hourly_fee}</Table.Cell>\n                        <Table.Cell>{timesheetEarned()}</Table.Cell>\n                    </Table.Row>\n                )\n                }\n            )}\n\n    buttonHandler = () => {\n        this.setState({showTimesheetForm: true})\n    }\n\n    closeTimesheetContainer = () => {\n        this.setState({showTimesheetForm: false})\n    }\n    render() {\n\n        return (\n            <>\n            <Switch>\n           \n            <Route path=\"/clients/:id/projects/:id\" render={()=> {\n                return ( \n                        <>\n                           <Table color=\"blue\" size= \"small\" compact=\"very\" striped=\"true\" id= \"timesheet-container\">\n                        <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell >Date</Table.HeaderCell>\n                            <Table.HeaderCell >Hours</Table.HeaderCell>\n                            <Table.HeaderCell >Note</Table.HeaderCell>\n                            <Table.HeaderCell >Delete</Table.HeaderCell>\n                        </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                        {this.renderTimesheets()}\n                      \n                        {this.state.showTimesheetForm? <TimesheetForm closeTimesheetContainer ={this.closeTimesheetContainer} projectId ={this.props.projectId}  clientId ={this.props.clientId} /> : null}\n                        </Table.Body>\n                    </Table >\n\n             \n                  {this.props.project.complete? null: <Button onClick = {this.buttonHandler}> Add Timesheet </Button>}\n                 </>\n                )\n            }} />\n             <Route exact path = \"/invoice\" render={()=> {\n                return ( \n                    <Table color=\"blue\" size= \"small\" compact=\"very\">\n                        <Table.Header>\n                            <Table.Row>\n                                 <Table.HeaderCell >Project</Table.HeaderCell>\n                                <Table.HeaderCell >Date</Table.HeaderCell>\n                                <Table.HeaderCell >Note</Table.HeaderCell>\n                                <Table.HeaderCell >Hours</Table.HeaderCell>\n                                <Table.HeaderCell >Rate</Table.HeaderCell>\n                                <Table.HeaderCell >Total</Table.HeaderCell>\n\n                            </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {this.renderInvoiceTimesheets()}\n                            <Table.Row>\n                                <Table.Cell></Table.Cell>\n                                <Table.Cell></Table.Cell>\n                                <Table.Cell></Table.Cell>\n                                <Table.Cell></Table.Cell>\n                                <Table.Cell><strong>Grand Total</strong></Table.Cell>\n                                <Table.Cell><strong>${this.props.project.project_total_earned}</strong> </Table.Cell>\n                            </Table.Row>\n                        </Table.Body>\n                    </Table >\n                )\n            }} />\n            </Switch> \n            </>\n        )\n    }\n}\n\n\nfunction mdp(dispatch){\n    return {deleteTimesheet: (delProject, clientId,delTimesheet) => dispatch(deleteTimesheet(delProject, clientId,delTimesheet) )}\n  }\n  \n\n\nexport default withRouter(connect(null,mdp)(TimesheetContainer));","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/timesheetForm.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/clientForm.js",["139"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {createClient} from '../Redux/actions'\nimport { Button, Header, Icon, Modal, Form,   } from 'semantic-ui-react'\n\nclass ClientForm extends React.Component {\n    state = {\n        user_id: this.props.userId, \n        name: \"\", \n        email: \"\", \n        address: \"\", \n        phone: \"\", \n\n    }\n\n    changeHandler= (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    submitHandler= (event) => {\n        event.preventDefault() \n        this.props.createClient(this.state)\n        this.props.closeForm()\n        this.setState( {\n            user_id: this.props.userId, \n            name: \"\", \n            email: \"\", \n            address: \"\", \n            phone: \"\", \n    \n        })\n        \n    }\n    render() {\n        return (\n            <>\n            <Header content='New Client Form ' />\n            <Modal.Content>\n            <Form onSubmit= {this.submitHandler}>\n                <Form.Group widths='equal'>\n                <Form.Input fluid label='Name' placeholder=' name' name= \"name\" value={this.state.name} onChange = {this.changeHandler}  />   <br/> \n                <br/> \n                <Form.Input fluid label='Email' name= \"email\" value={this.state.email} onChange = {this.changeHandler} placeholder= \"E-Mail\"  />     <br/>              \n                <Form.Input fluid label='Address' name= \"address\" value={this.state.address} onChange = {this.changeHandler} placeholder= \"Address\"   />   <br/> \n                <Form.Input fluid label='Phone' type = \"tel\" name= \"phone\" value={this.state.phone} onChange = {this.changeHandler} placeholder= \"Phone #\"  />  <br/> \n                <Button size=\"small\" color= \"blue\" type='submit'>Submit</Button>\n                </Form.Group>\n            \n          </Form>\n\n        \n            </Modal.Content>\n           </>\n\n        )\n    }\n}\n\nfunction mdp(dispatch){\n    return {createClient: (newClient) => dispatch(createClient(newClient))}\n  }\n  \n\nexport default connect(null,mdp)(ClientForm) \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/projectForm.js",["140","141","142","143"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {createProject} from '../Redux/actions'\nimport { Button, Header, Icon, Modal, Form,   } from 'semantic-ui-react'\nimport { BrowserRouter as Router, Route , Switch, withRouter, NavLink} from 'react-router-dom'\n\nclass ProjectForm extends React.Component {\n    state = {\n       name: \"\", \n       payment_terms: \"\", \n       hourly_fee: \"\", \n        client_id: this.props.clientId\n    }\n\n    changeHandler = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    dropDownHandler  = (e, { value }) => {\n    console.log(\"e:\", e )\n    console.log(\"value:\", value )\n    this.setState({ client_id: value })\n}\n\n    formHandler = (event) => {\n        event.preventDefault()\n        this.props.createProject(this.state)\n        console.log(\"form is submitted\") \n        this.setState({\n            name: \"\", \n            payment_terms: \"\", \n            hourly_fee: \"\", \n            client_id: this.props.clientId\n        })\n        this.props.closeFormModal()\n    }\n    \n    clientList = () => {\n        \n        return this.props.user.clients.map(client => {\n            const container = {};\n\n            container.key = client.id;\n            container.text = client.name;\n            container.value = client.id;\n            return container;\n       })\n         \n\n   \n    }\n    \n    render() {\n         console.log(this.state)\n        return (\n            <>\n            <Switch> \n            <Route exact path = \"/clients\" render={()=> {\n                     return (\n                        <>\n            \n                        <Header content='New Project Form ' />\n                        <Modal.Content>\n                            <Form onSubmit= {this.formHandler}>\n                                <Form.Group widths='equal'>\n                                <Form.Input fluid label='Name' placeholder=' name' name= \"name\" value={this.state.name} onChange = {this.changeHandler}  />   <br/> \n                                <br/> \n                                <Form.Input fluid label='Payment Terms' name= \"payment_terms\" value={this.state.payment_terms} onChange = {this.changeHandler} placeholder= \"Payment Terms\"  />     <br/>              \n                                <Form.Input fluid label='Hourly Fee' name= \"hourly_fee\" value={this.state.hourly_fee} onChange = {this.changeHandler} placeholder= \"Hourly Fee\"   />   <br/> \n            \n                                <Button size=\"small\" color= \"blue\" type='submit'>Add New Project</Button>\n                                </Form.Group>\n                            \n                            </Form>\n                        </Modal.Content>\n                        \n                        </>\n                     )\n            }} />\n            <Route exact path = \"/open_projects\" render={()=> {\n                     return (\n                        <>\n                        \n                        <Header content='New Project Form' />\n                        <Modal.Content>\n                            <Form onSubmit= {this.formHandler}>\n                                <Form.Group widths='equal'>\n                                \n                                <Form.Input fluid label='Name' placeholder=' name' name= \"name\" value={this.state.name} onChange = {this.changeHandler}  />   <br/> \n                                <br/> \n                                <Form.Select\n                                    fluid\n                                    label='Client'\n                                    name = 'client_id'\n                                    options={this.clientList()}\n                                    placeholder='Client'\n                                    onChange = {this.dropDownHandler}\n                                    value={this.state.client_id}\n                                    \n                                />\n                                <Form.Input fluid label='Payment Terms' name= \"payment_terms\" value={this.state.payment_terms} onChange = {this.changeHandler} placeholder= \"Payment Terms\"  />     <br/>              \n                                <Form.Input fluid label='Hourly Fee' name= \"hourly_fee\" value={this.state.hourly_fee} onChange = {this.changeHandler} placeholder= \"Hourly Fee\"   />   <br/> \n                                \n                                <Button size=\"small\" color= \"blue\" type='submit'>Add New Project</Button>\n                                </Form.Group>\n                            \n                            </Form>\n                        </Modal.Content>\n                        \n                        </>\n                     )\n            }} />\n\n            </Switch>\n            </>\n        )\n    }\n}\n\nfunction mdp(dispatch){\n    return {createProject: (newProject) => dispatch(createProject(newProject))}\n  }\n  \n\nexport default connect(null,mdp)(ProjectForm) \n",["144","145"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/openProjectsContainer.js",["146","147","148"],"import React from 'react'\nimport ProjectContainer from './projectContainer'\nimport Chart from '../Component/chart'\nimport Navbar from './navBar'\nimport { Button, Header, Icon, Modal, Form } from 'semantic-ui-react'\nimport ProjectForm from '../Component/projectForm'\n\nclass OpenProjectsContainer extends React.Component{\n    state = {\n        newProjectModal: false \n    }\n\n    allProjects = () => {\n        let allProjects = []\n        for( let i = 0; i < this.props.user.clients.length;i++){\n\n            for(let j = 0; j < this.props.user.clients[i].projects.length; j++){\n               var innerValue = this.props.user.clients[i].projects[j];\n               allProjects.push(innerValue)\n            }\n         }\n\n         allProjects.sort(function(a, b){\n            if(a.name < b.name) { return -1; }\n            if(a.name > b.name) { return 1; }\n            return 0;\n         })\n        \n\n        return allProjects\n    }\n\n\n    openProjects = ()  => {\n       return this.allProjects().filter(projects => projects.complete ===false)\n         \n\n    }\n\n    closeModalForm = () => {\n        this.setState({newProjectModal:false})\n    }\n    openModalForm = () => {\n        this.setState({newProjectModal:true})\n    }\n    \n\n  \n    render() {\n        // console.log(this.allProjects())\n        return (\n            <>\n            <Navbar/>\n            <br/>\n            {this.props.user.clients=== undefined? \n            <h1>Projects Loading...</h1>:\n            <>\n            <h3> Welcome Back {this.props.user.name}! </h3>\n              <Chart allProjects={this.allProjects()}/>\n              <br/>\n              <br/>\n              <ProjectContainer projects={this.openProjects()}/>\n              <br/>\n              <Modal\n                // as ={Form}\n                closeIcon\n                open={this.state.newProjectModal}\n                trigger={<Button color=\"blue\">Add New Project</Button>}\n                onClose={this.closeModalForm}\n                onOpen={this.openModalForm}\n                centered=\" true\" \n                size='small'\n                >\n                    <ProjectForm closeFormModal={this.closeModalForm} user={this.props.user}/>\n                </Modal>\n            </>\n            }\n            </>\n        )\n    }\n}\n\nexport default OpenProjectsContainer","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/login.js",["149","150"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/signup.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/user.js",[],["151","152"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/chart.js",["153","154","155","156","157","158","159"],"import React from \"react\"\n// import {G2,Chart,Tooltip,Interval,} from \"bizcharts\";\nimport { BrowserRouter as Router, Route , Switch, withRouter, NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart, Line, Text} from 'recharts';\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport {Button} from 'semantic-ui-react'\n\nclass AppCharts extends React.Component {\n\n    handleSaveClick = () => {\n        domtoimage.toBlob(document.getElementById('chart'))\n           .then(function (blob) {\n              fileDownload(blob, 'dom-to-image.png');\n           });\n       }\n\n\n       clientTotalEarned = () => {\n\n         return this.props.user.clients.map(client => {\n          const totalEarned =  () =>  {return client.client_completed_earned+client.client_incomplete_earned}\n          return(Object.assign(client, {client_total_earned:totalEarned()})) }\n          );\n       }\n\n       topFiveClient = () => { \n         const sortedClients = () =>{\n            return this.clientTotalEarned().sort(function(a, b) {\n              \n              if (a.client_total_earned > b.client_total_earned) {\n                return -1;\n              }\n              if (a.client_total_earned < b.client_total_earned) {\n                return 1;\n              }\n              return 0;\n            });\n          }\n\n          return sortedClients().slice(0,5)\n       }\n\n\n   \n    render() {\n        console.log(this.topFiveClient())\n   \n        return (\n            <>\n\n                           <h1>Top 5 Clients</h1> \n                         <div id=\"chart\">\n                          \n                        <BarChart\n                        width={750}\n                        height={350}\n                        data={this.topFiveClient()}\n                        margin={{\n                          top: 20, right: 50, left: 20, bottom: 20,\n                        }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" name =\"Client\" angle={-45} textAnchor=\"end\" height={60}/>\n                        <YAxis \n                         width={90}\n                        orientation='left'\n                        label={\n                               <Text\n                              x={0}\n                              y={0}\n                              dx={50}\n                              dy={150}\n                              offset={0}\n                              angle={-90}\n                          >$ Earned</Text>}/>\n                        <Tooltip />\n                        <Legend />\n                     \n                        <Bar dataKey=\"client_completed_earned\" name= \"Completed Projects\" stackId=\"a\" fill=\"#455d85\" />\n                        <Bar dataKey=\"client_incomplete_earned\" name= \"Incomplete Projects\" stackId=\"a\" fill=\"#6f97d9\" />\n                      </BarChart>\n                      <br/>\n                  \n                      </div>\n                      <Button  onClick={this.handleSaveClick}> Save Chart! </Button>\n                     \n\n            </>\n\n        )\n    }\n}\n\n\nfunction msp(state){\n    return {user: state.user}\n  }\n  \n\n\n  export default withRouter(connect(msp)(AppCharts));\n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/history.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/invoiceContainer.js",["160"],"import React from 'react'\nimport NavBar from './navBar'\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport {connect} from 'react-redux'\nimport { Grid, Icon, Button, Header, Table} from 'semantic-ui-react'\nimport moment from \"moment\";\nimport TimesheetContainer from './timesheetContainer'\n\n\n\nclass InvoiceContainer extends React.Component{\n    state={\n        curTime : moment().format(\"MM-DD-YYYY\"),\n      }\n      \n    handleSaveClick = () => {\n        domtoimage.toBlob(document.getElementById('invoice-grid'))\n           .then(function (blob) {\n              fileDownload(blob, 'dom-to-image.png');\n           });\n       }\n\n    render() {\n        console.log(this.props)\n        return(\n            <>\n            <NavBar/>\n            <br/>\n            <div id= \"invoice\" >\n            <Grid id=\"invoice-grid\">\n                <Grid.Row>\n                    <Grid.Column floated='left' width={5}>\n                    <Header as=\"h2\">{this.props.user.name}\n                    <Header.Subheader>{this.props.user.address}</Header.Subheader>\n                    <Header.Subheader>{this.props.user.email}</Header.Subheader>\n                    <Header.Subheader>{this.props.user.phone}</Header.Subheader>\n                    </Header >\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={5}>\n                    <Header size=\"huge\" color=\"blue\"> Invoice</Header >\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column floated='left' width={5}>\n                    <Table color=\"blue\" size= \"small\" compact=\"very\">\n                        <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell >Bill To</Table.HeaderCell>\n                            \n                        </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.name} </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.address} </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.email} </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.phone} </Table.Cell>\n                        </Table.Row>\n                      \n                        </Table.Body>\n                    </Table >\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={5}>\n                    <Table celled=\"true\">\n\n                    <Table.Body >\n                        <Table.Row>\n                            <Table.Cell><strong>Invoice # </strong></Table.Cell>\n                            <Table.Cell> </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><strong>Invoice Total</strong></Table.Cell>\n                            <Table.Cell> ${this.props.location.query.project.project_total_earned}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><strong>Date</strong></Table.Cell>\n                            <Table.Cell> {this.state.curTime}</Table.Cell>\n                        </Table.Row>\n                        </Table.Body>\n                    </Table>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column stretched=\"true\">\n                         <TimesheetContainer timesheets = {this.props.location.query.project.timesheets} projectId ={this.props.location.query.project.id}  clientId ={this.props.location.query.client.id} project= {this.props.location.query.project}/>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <br/>\n            </div>\n            <br/>\n            <Button onClick={this.handleSaveClick}> Download Invoice </Button>\n\n            </>\n        )\n    }\n}\n\nfunction msp(state){\n    return {user: state.user}\n  }\n  \n  \n  export default (connect(msp)(InvoiceContainer));\n  ",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":9,"nodeType":"167","messageId":"168","endLine":3,"endColumn":16},{"ruleId":"165","severity":1,"message":"169","line":4,"column":27,"nodeType":"167","messageId":"168","endLine":4,"endColumn":33},{"ruleId":"165","severity":1,"message":"170","line":4,"column":35,"nodeType":"167","messageId":"168","endLine":4,"endColumn":40},{"ruleId":"165","severity":1,"message":"171","line":4,"column":43,"nodeType":"167","messageId":"168","endLine":4,"endColumn":49},{"ruleId":"165","severity":1,"message":"172","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"173","line":8,"column":18,"nodeType":"167","messageId":"168","endLine":8,"endColumn":24},{"ruleId":"165","severity":1,"message":"174","line":8,"column":26,"nodeType":"167","messageId":"168","endLine":8,"endColumn":30},{"ruleId":"165","severity":1,"message":"175","line":8,"column":39,"nodeType":"167","messageId":"168","endLine":8,"endColumn":43},{"ruleId":"165","severity":1,"message":"169","line":5,"column":27,"nodeType":"167","messageId":"168","endLine":5,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":18,"column":70,"nodeType":"178","messageId":"179","endLine":18,"endColumn":72},{"ruleId":"176","severity":1,"message":"177","line":19,"column":68,"nodeType":"178","messageId":"179","endLine":19,"endColumn":70},{"ruleId":"165","severity":1,"message":"180","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},{"ruleId":"165","severity":1,"message":"181","line":5,"column":16,"nodeType":"167","messageId":"168","endLine":5,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":15,"column":13,"nodeType":"184","endLine":15,"endColumn":57},{"ruleId":"161","replacedBy":"185"},{"ruleId":"163","replacedBy":"186"},{"ruleId":"165","severity":1,"message":"169","line":10,"column":42,"nodeType":"167","messageId":"168","endLine":10,"endColumn":48},{"ruleId":"165","severity":1,"message":"170","line":10,"column":50,"nodeType":"167","messageId":"168","endLine":10,"endColumn":55},{"ruleId":"165","severity":1,"message":"171","line":10,"column":58,"nodeType":"167","messageId":"168","endLine":10,"endColumn":64},{"ruleId":"165","severity":1,"message":"187","line":10,"column":66,"nodeType":"167","messageId":"168","endLine":10,"endColumn":76},{"ruleId":"165","severity":1,"message":"188","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":24},{"ruleId":"165","severity":1,"message":"169","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":33},{"ruleId":"165","severity":1,"message":"173","line":6,"column":18,"nodeType":"167","messageId":"168","endLine":6,"endColumn":24},{"ruleId":"165","severity":1,"message":"174","line":6,"column":26,"nodeType":"167","messageId":"168","endLine":6,"endColumn":30},{"ruleId":"165","severity":1,"message":"175","line":6,"column":39,"nodeType":"167","messageId":"168","endLine":6,"endColumn":43},{"ruleId":"165","severity":1,"message":"172","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"181","line":5,"column":18,"nodeType":"167","messageId":"168","endLine":5,"endColumn":23},{"ruleId":"165","severity":1,"message":"189","line":5,"column":25,"nodeType":"167","messageId":"168","endLine":5,"endColumn":29},{"ruleId":"165","severity":1,"message":"169","line":3,"column":27,"nodeType":"167","messageId":"168","endLine":3,"endColumn":33},{"ruleId":"165","severity":1,"message":"190","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"174","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":20},{"ruleId":"165","severity":1,"message":"173","line":4,"column":30,"nodeType":"167","messageId":"168","endLine":4,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":29,"column":17,"nodeType":"193","messageId":"194","endLine":29,"endColumn":99},{"ruleId":"165","severity":1,"message":"174","line":4,"column":26,"nodeType":"167","messageId":"168","endLine":4,"endColumn":30},{"ruleId":"165","severity":1,"message":"174","line":4,"column":26,"nodeType":"167","messageId":"168","endLine":4,"endColumn":30},{"ruleId":"165","severity":1,"message":"169","line":5,"column":27,"nodeType":"167","messageId":"168","endLine":5,"endColumn":33},{"ruleId":"165","severity":1,"message":"187","line":5,"column":51,"nodeType":"167","messageId":"168","endLine":5,"endColumn":61},{"ruleId":"165","severity":1,"message":"180","line":5,"column":63,"nodeType":"167","messageId":"168","endLine":5,"endColumn":70},{"ruleId":"161","replacedBy":"195"},{"ruleId":"163","replacedBy":"196"},{"ruleId":"165","severity":1,"message":"173","line":5,"column":18,"nodeType":"167","messageId":"168","endLine":5,"endColumn":24},{"ruleId":"165","severity":1,"message":"174","line":5,"column":26,"nodeType":"167","messageId":"168","endLine":5,"endColumn":30},{"ruleId":"165","severity":1,"message":"175","line":5,"column":39,"nodeType":"167","messageId":"168","endLine":5,"endColumn":43},{"ruleId":"165","severity":1,"message":"180","line":3,"column":9,"nodeType":"167","messageId":"168","endLine":3,"endColumn":16},{"ruleId":"165","severity":1,"message":"187","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":20},{"ruleId":"161","replacedBy":"197"},{"ruleId":"163","replacedBy":"198"},{"ruleId":"165","severity":1,"message":"169","line":3,"column":27,"nodeType":"167","messageId":"168","endLine":3,"endColumn":33},{"ruleId":"165","severity":1,"message":"170","line":3,"column":35,"nodeType":"167","messageId":"168","endLine":3,"endColumn":40},{"ruleId":"165","severity":1,"message":"171","line":3,"column":43,"nodeType":"167","messageId":"168","endLine":3,"endColumn":49},{"ruleId":"165","severity":1,"message":"180","line":3,"column":63,"nodeType":"167","messageId":"168","endLine":3,"endColumn":70},{"ruleId":"165","severity":1,"message":"199","line":5,"column":24,"nodeType":"167","messageId":"168","endLine":5,"endColumn":28},{"ruleId":"165","severity":1,"message":"200","line":5,"column":76,"nodeType":"167","messageId":"168","endLine":5,"endColumn":85},{"ruleId":"165","severity":1,"message":"201","line":5,"column":87,"nodeType":"167","messageId":"168","endLine":5,"endColumn":91},{"ruleId":"165","severity":1,"message":"174","line":6,"column":16,"nodeType":"167","messageId":"168","endLine":6,"endColumn":20},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Chart' is defined but never used.","'Header' is defined but never used.","'Icon' is defined but never used.","'Form' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavLink' is defined but never used.","'Image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["202"],["203"],"'withRouter' is defined but never used.","'ProjectContainer' is defined but never used.","'Item' is defined but never used.","'Grid' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["202"],["203"],["202"],["203"],"'Cell' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","no-global-assign","no-unsafe-negation"]