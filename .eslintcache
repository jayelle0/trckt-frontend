[{"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/reportWebVitals.js":"1","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/clientContainer.js":"2","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/App.js":"3","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/navBar.js":"4","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/index.js":"5","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/rootReducer.js":"6","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actions.js":"7","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/client.js":"8","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/projectContainer.js":"9","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/project.js":"10","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actionType.js":"11","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/timesheetContainer.js":"12","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/timesheetForm.js":"13","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/clientForm.js":"14","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/projectForm.js":"15","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/openProjectsContainer.js":"16","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/login.js":"17","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/signup.js":"18","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/user.js":"19","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/chart.js":"20","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/history.js":"21","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/invoiceContainer.js":"22"},{"size":362,"mtime":1607635548728,"results":"23","hashOfConfig":"24"},{"size":2169,"mtime":1609787583054,"results":"25","hashOfConfig":"24"},{"size":1961,"mtime":1609817227438,"results":"26","hashOfConfig":"24"},{"size":974,"mtime":1609788143193,"results":"27","hashOfConfig":"24"},{"size":872,"mtime":1608070592571,"results":"28","hashOfConfig":"24"},{"size":878,"mtime":1609786055691,"results":"29","hashOfConfig":"24"},{"size":7500,"mtime":1609794012500,"results":"30","hashOfConfig":"24"},{"size":971,"mtime":1609816876114,"results":"31","hashOfConfig":"24"},{"size":5171,"mtime":1609816996227,"results":"32","hashOfConfig":"24"},{"size":1281,"mtime":1609813747276,"results":"33","hashOfConfig":"24"},{"size":340,"mtime":1609786186107,"results":"34","hashOfConfig":"24"},{"size":5183,"mtime":1609817245407,"results":"35","hashOfConfig":"24"},{"size":1770,"mtime":1609816269012,"results":"36","hashOfConfig":"24"},{"size":2061,"mtime":1609773338869,"results":"37","hashOfConfig":"24"},{"size":4944,"mtime":1609793971198,"results":"38","hashOfConfig":"24"},{"size":2229,"mtime":1609797606142,"results":"39","hashOfConfig":"24"},{"size":2194,"mtime":1609784715678,"results":"40","hashOfConfig":"24"},{"size":1980,"mtime":1609787379950,"results":"41","hashOfConfig":"24"},{"size":162,"mtime":1608738713576,"results":"42","hashOfConfig":"24"},{"size":1879,"mtime":1609818250569,"results":"43","hashOfConfig":"24"},{"size":85,"mtime":1609783437203,"results":"44","hashOfConfig":"24"},{"size":4430,"mtime":1609816776606,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xeyhdd",{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/reportWebVitals.js",[],["102","103"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/clientContainer.js",["104","105","106","107","108","109","110","111"],"import React from 'react'\nimport Client from '../Component/client'\nimport {connect} from 'react-redux'\nimport { BrowserRouter as Router, Route , Switch, withRouter} from 'react-router-dom'\nimport Chart from \"../Component/chart\"\nimport { Card } from 'semantic-ui-react'\nimport ProjectContainer from './projectContainer'\nimport { Button, Header, Icon, Modal, Form } from 'semantic-ui-react'\nimport ClientForm from '../Component/clientForm'\nimport Navbar from './navBar'\n\n\nclass ClientContainer extends React.Component {\n\n    state = {\n        showProjects: false, \n        client: {},\n        clientForm:false, \n    }\n\n    renderClients = () => {return this.props.clients.map(clientObj=> <Client  client={clientObj} key={clientObj.id} openProjectHandler={this.openProjectHandler}/> ) }\n\n    openProjectHandler = (client) => {\n        this.setState({showProjects: !this.state.showProjects, client: client})\n    }\n\n    closeClientForm = () => {\n        this.setState({clientForm:false})\n    }\n    openClientForm = () => {\n        this.setState({clientForm:true})\n    }\n    \n\n    render() {\n        \n        return (\n         <>\n            <Navbar/>\n            { this.props.clients === undefined ? <h1> Loading Clients </h1>:\n                 <>\n                 {/* <Chart/>  */}\n                 <br/> \n                 <br/> \n                 <Card.Group itemsPerRow={3}>\n                {this.renderClients()}\n                </Card.Group>\n                <br/>\n                <Modal\n                // as ={Form}\n                closeIcon\n                open={this.state.clientForm}\n                trigger={<Button color=\"blue\">Add New Client</Button>}\n                onClose={this.closeClientForm}\n                onOpen={this.openClientForm}\n                >\n                    <ClientForm closeForm={this.closeClientForm} userId={this.props.userId}/>\n                </Modal>\n               \n                 {this.state.showProjects?  <ProjectContainer  client ={this.state.client} projects = {this.state.client.projects}/>:  null}\n                </>\n            }\n         </>\n        )\n             \n    }\n}\n\n\n\nexport default withRouter(ClientContainer)\n",["112","113"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/App.js",["114","115","116"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/navBar.js",["117"],"import React from 'react'\nimport {NavLink, Link} from 'react-router-dom'\n\nclass NavBar extends React.Component {\n    render() {\n        return (\n           \n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light shadow-sm\">\n            \n                        <ul class=\"navbar-nav\">\n                           \n                            <li class=\"nav-item active\">\n                            <Link to = \"/open_projects\">Home</Link>\n                            </li>\n                            <li class=\"nav-item\">\n                                <Link to = \"/clients\"> View My Clients</Link>\n                            </li> <li class=\"nav-item\" onClick={()=> localStorage.removeItem(\"token\")}>\n                                <Link to = \"/\"> Logout</Link>\n                            </li>\n\n\n                          \n                        </ul>\n                 \n                </nav>\n            \n        )\n    }\n}\n\nexport default NavBar \n",["118","119"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/index.js",["120","121","122","123"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './Redux/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { BrowserRouter, BrowserRouter as Router, Route , Switch, withRouter} from 'react-router-dom'\n\n\n const store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n <Provider store = {store} >\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/rootReducer.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actions.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/client.js",["124"],"import React from 'react'\nimport ProjectContainer from '../Container/projectContainer'\nimport { Card } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\n\nclass Client extends React.Component {\n\n\n    state = {\n        showProjects: false \n    }\n\n    showProjectsHandler = () => {\n       this.props.openProjectHandler(this.props.client)\n    }\n\n    render() {\n        // console.log(this.props)\n        return (\n            <>\n            <Card onClick= {this.showProjectsHandler}>\n            <Card.Content>\n                <Card.Header>{this.props.client.name}</Card.Header>\n                <Card.Meta>Email: {this.props.client.email}</Card.Meta>\n                <Card.Description>\n                Address: {this.props.client.address}\n                <br></br>\n                Phone: {this.props.client.phone}\n                </Card.Description>\n            </Card.Content>\n            </Card>\n \n            </>\n        )\n    }\n}\n\nexport default Client \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/projectContainer.js",["125","126","127","128"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/project.js",["129"],"import React from 'react'\nimport TimesheetContainer from '../Container/timesheetContainer'\nimport Chart from './chart'\nimport Navbar from '../Container/navBar'\nimport { Button } from 'semantic-ui-react'\nimport { Link} from 'react-router-dom'\n\n\nclass Project extends React.Component {\n\n\n\n    render() {\n    \n        return (\n\n            <>         \n            <Navbar/>\n            <h1>Client: {this.props.client.name} </h1>\n            <h5>Project Name: {this.props.project.name}</h5>\n            <h5>Payment Terms: {this.props.project.payment_terms}</h5> \n            <h5>Total Hours:   {this.props.project.project_total_hours}</h5>\n            <h5>Total Earned: ${this.props.project.project_total_earned}</h5>\n            <h5>Complete: {this.props.project.complete? \"Yes\":\"No\" }</h5> \n            <TimesheetContainer timesheets = {this.props.project.timesheets} projectId ={this.props.project.id}  clientId ={this.props.client.id} project= {this.props.project}/>\n            <br/> \n            <br/> \n            \n           <Button><Link  to={{\n                pathname: `/invoice`, \n                query:{client: this.props.client, project: this.props.project}\n              }}> Create An Invoice</Link></Button>  \n            </>\n        )\n    }\n}\n\nexport default Project \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Redux/actionType.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/timesheetContainer.js",["130","131","132","133","134"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/timesheetForm.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/clientForm.js",["135"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {createClient} from '../Redux/actions'\nimport { Button, Header, Icon, Modal, Form,   } from 'semantic-ui-react'\n\nclass ClientForm extends React.Component {\n    state = {\n        user_id: this.props.userId, \n        name: \"\", \n        email: \"\", \n        address: \"\", \n        phone: \"\", \n\n    }\n\n    changeHandler= (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    submitHandler= (event) => {\n        event.preventDefault() \n        this.props.createClient(this.state)\n        this.props.closeForm()\n        this.setState( {\n            user_id: this.props.userId, \n            name: \"\", \n            email: \"\", \n            address: \"\", \n            phone: \"\", \n    \n        })\n        \n    }\n    render() {\n        return (\n            <>\n            <Header content='New Client Form ' />\n            <Modal.Content>\n            <Form onSubmit= {this.submitHandler}>\n                <Form.Group widths='equal'>\n                <Form.Input fluid label='Name' placeholder=' name' name= \"name\" value={this.state.name} onChange = {this.changeHandler}  />   <br/> \n                <br/> \n                <Form.Input fluid label='Email' name= \"email\" value={this.state.email} onChange = {this.changeHandler} placeholder= \"E-Mail\"  />     <br/>              \n                <Form.Input fluid label='Address' name= \"address\" value={this.state.address} onChange = {this.changeHandler} placeholder= \"Address\"   />   <br/> \n                <Form.Input fluid label='Phone' type = \"tel\" name= \"phone\" value={this.state.phone} onChange = {this.changeHandler} placeholder= \"Phone #\"  />  <br/> \n                <Button size=\"small\" color= \"blue\" type='submit'>Submit</Button>\n                </Form.Group>\n            \n          </Form>\n\n        \n            </Modal.Content>\n           </>\n\n        )\n    }\n}\n\nfunction mdp(dispatch){\n    return {createClient: (newClient) => dispatch(createClient(newClient))}\n  }\n  \n\nexport default connect(null,mdp)(ClientForm) \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/projectForm.js",["136","137","138","139"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {createProject} from '../Redux/actions'\nimport { Button, Header, Icon, Modal, Form,   } from 'semantic-ui-react'\nimport { BrowserRouter as Router, Route , Switch, withRouter, NavLink} from 'react-router-dom'\n\nclass ProjectForm extends React.Component {\n    state = {\n       name: \"\", \n       payment_terms: \"\", \n       hourly_fee: \"\", \n        client_id: this.props.clientId\n    }\n\n    changeHandler = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    dropDownHandler  = (e, { value }) => {\n    console.log(\"e:\", e )\n    console.log(\"value:\", value )\n    this.setState({ client_id: value })\n}\n\n    formHandler = (event) => {\n        event.preventDefault()\n        this.props.createProject(this.state)\n        console.log(\"form is submitted\") \n        this.setState({\n            name: \"\", \n            payment_terms: \"\", \n            hourly_fee: \"\", \n            client_id: this.props.clientId\n        })\n        this.props.closeFormModal()\n    }\n    \n    clientList = () => {\n        \n        return this.props.user.clients.map(client => {\n            const container = {};\n\n            container.key = client.id;\n            container.text = client.name;\n            container.value = client.id;\n            return container;\n       })\n         \n\n   \n    }\n    \n    render() {\n         console.log(this.state)\n        return (\n            <>\n            <Switch> \n            <Route exact path = \"/clients\" render={()=> {\n                     return (\n                        <>\n            \n                        <Header content='New Project Form ' />\n                        <Modal.Content>\n                            <Form onSubmit= {this.formHandler}>\n                                <Form.Group widths='equal'>\n                                <Form.Input fluid label='Name' placeholder=' name' name= \"name\" value={this.state.name} onChange = {this.changeHandler}  />   <br/> \n                                <br/> \n                                <Form.Input fluid label='Payment Terms' name= \"payment_terms\" value={this.state.payment_terms} onChange = {this.changeHandler} placeholder= \"Payment Terms\"  />     <br/>              \n                                <Form.Input fluid label='Hourly Fee' name= \"hourly_fee\" value={this.state.hourly_fee} onChange = {this.changeHandler} placeholder= \"Hourly Fee\"   />   <br/> \n            \n                                <Button size=\"small\" color= \"blue\" type='submit'>Add New Project</Button>\n                                </Form.Group>\n                            \n                            </Form>\n                        </Modal.Content>\n                        \n                        </>\n                     )\n            }} />\n            <Route exact path = \"/open_projects\" render={()=> {\n                     return (\n                        <>\n                        \n                        <Header content='New Project Form' />\n                        <Modal.Content>\n                            <Form onSubmit= {this.formHandler}>\n                                <Form.Group widths='equal'>\n                                \n                                <Form.Input fluid label='Name' placeholder=' name' name= \"name\" value={this.state.name} onChange = {this.changeHandler}  />   <br/> \n                                <br/> \n                                <Form.Select\n                                    fluid\n                                    label='Client'\n                                    name = 'client_id'\n                                    options={this.clientList()}\n                                    placeholder='Client'\n                                    onChange = {this.dropDownHandler}\n                                    value={this.state.client_id}\n                                    \n                                />\n                                <Form.Input fluid label='Payment Terms' name= \"payment_terms\" value={this.state.payment_terms} onChange = {this.changeHandler} placeholder= \"Payment Terms\"  />     <br/>              \n                                <Form.Input fluid label='Hourly Fee' name= \"hourly_fee\" value={this.state.hourly_fee} onChange = {this.changeHandler} placeholder= \"Hourly Fee\"   />   <br/> \n            \n                                <Button size=\"small\" color= \"blue\" type='submit'>Add New Project</Button>\n                                </Form.Group>\n                            \n                            </Form>\n                        </Modal.Content>\n                        \n                        </>\n                     )\n            }} />\n\n            </Switch>\n            </>\n        )\n    }\n}\n\nfunction mdp(dispatch){\n    return {createProject: (newProject) => dispatch(createProject(newProject))}\n  }\n  \n\nexport default connect(null,mdp)(ProjectForm) \n","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/openProjectsContainer.js",["140","141","142"],"import React from 'react'\nimport ProjectContainer from './projectContainer'\nimport Chart from '../Component/chart'\nimport Navbar from './navBar'\nimport { Button, Header, Icon, Modal, Form } from 'semantic-ui-react'\nimport ProjectForm from '../Component/projectForm'\n\nclass OpenProjectsContainer extends React.Component{\n    state = {\n        newProjectModal: false \n    }\n\n    allProjects = () => {\n        let allProjects = []\n        for( let i = 0; i < this.props.user.clients.length;i++){\n\n            for(let j = 0; j < this.props.user.clients[i].projects.length; j++){\n               var innerValue = this.props.user.clients[i].projects[j];\n               allProjects.push(innerValue)\n            }\n         }\n\n         allProjects.sort(function(a, b){\n            if(a.name < b.name) { return -1; }\n            if(a.name > b.name) { return 1; }\n            return 0;\n         })\n        \n\n        return allProjects\n    }\n\n\n    openProjects = ()  => {\n       return this.allProjects().filter(projects => projects.complete ===false)\n         \n\n    }\n\n    closeModalForm = () => {\n        this.setState({newProjectModal:false})\n    }\n    openModalForm = () => {\n        this.setState({newProjectModal:true})\n    }\n    \n\n  \n    render() {\n        // console.log(this.allProjects())\n        return (\n            <>\n            <Navbar/>\n            {this.props.user.clients=== undefined? \n            <h1>Projects Loading...</h1>:\n            <>\n            <h3> Welcome Back {this.props.user.name}! Below are your current projects</h3>\n              <Chart allProjects={this.allProjects()}/>\n              <br/>\n              <br/>\n              <ProjectContainer projects={this.openProjects()}/>\n              <Modal\n                // as ={Form}\n                closeIcon\n                open={this.state.newProjectModal}\n                trigger={<Button color=\"blue\">Add New Project</Button>}\n                onClose={this.closeModalForm}\n                onOpen={this.openModalForm}\n                >\n                    <ProjectForm closeFormModal={this.closeModalForm} user={this.props.user}/>\n                </Modal>\n            </>\n            }\n            </>\n        )\n    }\n}\n\nexport default OpenProjectsContainer","/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/login.js",["143","144","145"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/signup.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/user.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Component/chart.js",["146","147","148","149","150","151","152"],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/history.js",[],"/Users/jacqueline/Development/mod5/trckt/trckt-frontend/src/Container/invoiceContainer.js",["153","154"],"import React from 'react'\nimport NavBar from './navBar'\nimport domtoimage from 'dom-to-image';\nimport fileDownload from \"js-file-download\";\nimport {connect} from 'react-redux'\nimport { Grid, Icon, Button, Header, Table} from 'semantic-ui-react'\nimport moment from \"moment\";\nimport TimesheetContainer from './timesheetContainer'\n\n\n\nclass InvoiceContainer extends React.Component{\n    state={\n        curTime : moment().format(\"MM-DD-YYYY\"),\n      }\n      \n    handleSaveClick = () => {\n        domtoimage.toBlob(document.getElementById('invoice'))\n           .then(function (blob) {\n              fileDownload(blob, 'dom-to-image.png');\n           });\n       }\n\n    render() {\n        console.log(this.props)\n        return(\n            <>\n            <NavBar/>\n            <br/>\n            <div id= \"invoice\" >\n            <Grid >\n                <Grid.Row>\n                    <Grid.Column floated='left' width={5}>\n                    <Header as=\"h2\">{this.props.user.name}\n                    <Header.Subheader>{this.props.user.address}</Header.Subheader>\n                    <Header.Subheader>{this.props.user.email}</Header.Subheader>\n                    <Header.Subheader>{this.props.user.phone}</Header.Subheader>\n                    </Header >\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={5}>\n                    <Header size=\"huge\" color=\"blue\"> Invoice</Header >\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column floated='left' width={5}>\n                    <Table color=\"blue\" size= \"small\" compact=\"very\">\n                        <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell >Bill To</Table.HeaderCell>\n                            \n                        </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.name} </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.address} </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.email} </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>{this.props.location.query.client.phone} </Table.Cell>\n                        </Table.Row>\n                      \n                        </Table.Body>\n                    </Table >\n                    </Grid.Column>\n                    <Grid.Column floated='right' width={5}>\n                    <Table celled=\"true\">\n\n                    <Table.Body >\n                        <Table.Row>\n                            <Table.Cell><strong>Invoice # </strong></Table.Cell>\n                            <Table.Cell> </Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><strong>Invoice Total</strong></Table.Cell>\n                            <Table.Cell> ${this.props.location.query.project.project_total_earned}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell><strong>Date</strong></Table.Cell>\n                            <Table.Cell> {this.state.curTime}</Table.Cell>\n                        </Table.Row>\n                        </Table.Body>\n                    </Table>\n                    \n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column stretched=\"true\">\n                         <TimesheetContainer timesheets = {this.props.location.query.project.timesheets} projectId ={this.props.location.query.project.id}  clientId ={this.props.location.query.client.id} project= {this.props.location.query.project}/>\n                    </Grid.Column>\n                </Grid.Row>\n              \n                \n            </Grid>\n            </div>\n            <br/>\n            <button onClick={this.handleSaveClick}> Download Invoice </button>\n\n            </>\n        )\n    }\n}\n\nfunction msp(state){\n    return {user: state.user}\n  }\n  \n  \n  export default (connect(msp)(InvoiceContainer));\n  ",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"163","line":4,"column":27,"nodeType":"161","messageId":"162","endLine":4,"endColumn":33},{"ruleId":"159","severity":1,"message":"164","line":4,"column":35,"nodeType":"161","messageId":"162","endLine":4,"endColumn":40},{"ruleId":"159","severity":1,"message":"165","line":4,"column":43,"nodeType":"161","messageId":"162","endLine":4,"endColumn":49},{"ruleId":"159","severity":1,"message":"166","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"167","line":8,"column":18,"nodeType":"161","messageId":"162","endLine":8,"endColumn":24},{"ruleId":"159","severity":1,"message":"168","line":8,"column":26,"nodeType":"161","messageId":"162","endLine":8,"endColumn":30},{"ruleId":"159","severity":1,"message":"169","line":8,"column":39,"nodeType":"161","messageId":"162","endLine":8,"endColumn":43},{"ruleId":"155","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","severity":1,"message":"163","line":5,"column":27,"nodeType":"161","messageId":"162","endLine":5,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":18,"column":70,"nodeType":"174","messageId":"175","endLine":18,"endColumn":72},{"ruleId":"172","severity":1,"message":"173","line":19,"column":68,"nodeType":"174","messageId":"175","endLine":19,"endColumn":70},{"ruleId":"159","severity":1,"message":"176","line":2,"column":9,"nodeType":"161","messageId":"162","endLine":2,"endColumn":16},{"ruleId":"155","replacedBy":"177"},{"ruleId":"157","replacedBy":"178"},{"ruleId":"159","severity":1,"message":"163","line":10,"column":42,"nodeType":"161","messageId":"162","endLine":10,"endColumn":48},{"ruleId":"159","severity":1,"message":"164","line":10,"column":50,"nodeType":"161","messageId":"162","endLine":10,"endColumn":55},{"ruleId":"159","severity":1,"message":"165","line":10,"column":58,"nodeType":"161","messageId":"162","endLine":10,"endColumn":64},{"ruleId":"159","severity":1,"message":"179","line":10,"column":66,"nodeType":"161","messageId":"162","endLine":10,"endColumn":76},{"ruleId":"159","severity":1,"message":"180","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":24},{"ruleId":"159","severity":1,"message":"163","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":33},{"ruleId":"159","severity":1,"message":"167","line":6,"column":18,"nodeType":"161","messageId":"162","endLine":6,"endColumn":24},{"ruleId":"159","severity":1,"message":"168","line":6,"column":26,"nodeType":"161","messageId":"162","endLine":6,"endColumn":30},{"ruleId":"159","severity":1,"message":"169","line":6,"column":39,"nodeType":"161","messageId":"162","endLine":6,"endColumn":43},{"ruleId":"159","severity":1,"message":"166","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":13},{"ruleId":"159","severity":1,"message":"163","line":3,"column":27,"nodeType":"161","messageId":"162","endLine":3,"endColumn":33},{"ruleId":"159","severity":1,"message":"181","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"159","severity":1,"message":"168","line":4,"column":16,"nodeType":"161","messageId":"162","endLine":4,"endColumn":20},{"ruleId":"159","severity":1,"message":"182","line":4,"column":22,"nodeType":"161","messageId":"162","endLine":4,"endColumn":28},{"ruleId":"159","severity":1,"message":"167","line":4,"column":30,"nodeType":"161","messageId":"162","endLine":4,"endColumn":36},{"ruleId":"159","severity":1,"message":"168","line":4,"column":26,"nodeType":"161","messageId":"162","endLine":4,"endColumn":30},{"ruleId":"159","severity":1,"message":"168","line":4,"column":26,"nodeType":"161","messageId":"162","endLine":4,"endColumn":30},{"ruleId":"159","severity":1,"message":"163","line":5,"column":27,"nodeType":"161","messageId":"162","endLine":5,"endColumn":33},{"ruleId":"159","severity":1,"message":"179","line":5,"column":51,"nodeType":"161","messageId":"162","endLine":5,"endColumn":61},{"ruleId":"159","severity":1,"message":"176","line":5,"column":63,"nodeType":"161","messageId":"162","endLine":5,"endColumn":70},{"ruleId":"159","severity":1,"message":"167","line":5,"column":18,"nodeType":"161","messageId":"162","endLine":5,"endColumn":24},{"ruleId":"159","severity":1,"message":"168","line":5,"column":26,"nodeType":"161","messageId":"162","endLine":5,"endColumn":30},{"ruleId":"159","severity":1,"message":"169","line":5,"column":39,"nodeType":"161","messageId":"162","endLine":5,"endColumn":43},{"ruleId":"159","severity":1,"message":"183","line":2,"column":38,"nodeType":"161","messageId":"162","endLine":2,"endColumn":43},{"ruleId":"159","severity":1,"message":"176","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"179","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":20},{"ruleId":"159","severity":1,"message":"163","line":3,"column":27,"nodeType":"161","messageId":"162","endLine":3,"endColumn":33},{"ruleId":"159","severity":1,"message":"164","line":3,"column":35,"nodeType":"161","messageId":"162","endLine":3,"endColumn":40},{"ruleId":"159","severity":1,"message":"165","line":3,"column":43,"nodeType":"161","messageId":"162","endLine":3,"endColumn":49},{"ruleId":"159","severity":1,"message":"176","line":3,"column":63,"nodeType":"161","messageId":"162","endLine":3,"endColumn":70},{"ruleId":"159","severity":1,"message":"184","line":5,"column":24,"nodeType":"161","messageId":"162","endLine":5,"endColumn":28},{"ruleId":"159","severity":1,"message":"185","line":5,"column":76,"nodeType":"161","messageId":"162","endLine":5,"endColumn":85},{"ruleId":"159","severity":1,"message":"186","line":5,"column":87,"nodeType":"161","messageId":"162","endLine":5,"endColumn":91},{"ruleId":"159","severity":1,"message":"168","line":6,"column":16,"nodeType":"161","messageId":"162","endLine":6,"endColumn":20},{"ruleId":"159","severity":1,"message":"182","line":6,"column":22,"nodeType":"161","messageId":"162","endLine":6,"endColumn":28},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Chart' is defined but never used.","'Header' is defined but never used.","'Icon' is defined but never used.","'Form' is defined but never used.",["187"],["188"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavLink' is defined but never used.",["187"],["188"],"'withRouter' is defined but never used.","'ProjectContainer' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'Cell' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","no-global-assign","no-unsafe-negation"]